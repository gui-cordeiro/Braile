/*
 * -> Código-Fonte do Jogo do Braile
 * -> Desenvolvido por: Guilherme Cordeiro
 * -> Ano: 2017, 2023
 */

/* 0) MENU PRINCIPAL */
int menu(int lin1, int col1, int qtd, char lista[][40], int erro) {
    int opt = 1, lin2, col2, linhaSelecionada, i, tamMaxItem, tecla;

    //Parte original do menu
    titulo("-", "Menu Principal");

    setlocale(LC_ALL, "C");
    int coluna = 1;
    box(1, 1, 7, 119);
    setlocale(LC_ALL, "Portuguese");

    if (erro == 0) {
        addFade(2, tempo, 0);
    }
    /*linhaCol(2, 4); printf(" _____         _                           ");Sleep(tempo);
    linhaCol(3, 4); printf("|     |___ ___| |_ ___ _ _ ___ ___ ___ ___ ");Sleep(tempo);
    linhaCol(4, 4); printf("|-   -|   |_ -|  _|  _| | |  _| . | -_|_ -|");Sleep(tempo);
    linhaCol(5, 4); printf("|_____|_|_|___|_| |_| |___|___|___|___|___|");Sleep(tempo);

    linhaCol(2, 4); printf(" _____                 _____     _         _         _ ");Sleep(tempo);
    linhaCol(3, 4); printf("|     |___ ___ _ _    |  _  |___|_|___ ___|_|___ ___| |");Sleep(tempo);
    linhaCol(4, 4); printf("| | | | -_|   | | |   |   __|  _| |   |  _| | . | .'| |");Sleep(tempo);
    linhaCol(5, 4); printf("|_|_|_|___|_|_|___|   |__|  |_| |_|_|_|___|_|  _|__,|_|");Sleep(tempo);
    linhaCol(6, 4); printf("                                            |_|        ");Sleep(tempo);*/

    linhaCol(2, 4); printf(" _____                     _                       ___   ___   ");Sleep(tempo);
    linhaCol(3, 4); printf("|  _  |___ ___ ___ _ _ ___| |_ ___    ___ ___     |_  | |_  |  ");Sleep(tempo);
    linhaCol(4, 4); printf("|   __| -_|  _| . | | |   |  _| .'|  |   | . |_    _| |_ _| |_ ");Sleep(tempo);
    linhaCol(5, 4); printf("|__|  |___|_| |_  |___|_|_|_| |__,|  |_|_|___|_|  |_____|_____|");Sleep(tempo);
    linhaCol(6, 4); printf("              |___|                                            ");Sleep(tempo);



                    /*printf(" _____                     __                 ");Sleep(tempo);
                    printf("|     |___ _____ ___    __|  |___ ___ ___ ___ ");Sleep(tempo);
                    printf("|   --| . |     | . |  |  |  | . | . | .'|  _|");Sleep(tempo);
                    printf("|_____|___|_|_|_|___|  |_____|___|_  |__,|_|  ");Sleep(tempo);
                    printf("                                 |___|        ");Sleep(tempo);


                    printf(" _____         _                                _           __             ");Sleep(tempo);
                    printf("|     |___ ___| |_ ___ _ _ ___ ___ ___ ___    _| |___    __|  |___ ___ ___ ");Sleep(tempo);
                    printf("|-   -|   |_ -|  _|  _| | |  _| . | -_|_ -|  | . | . |  |  |  | . | . | . |");Sleep(tempo);
                    printf("|_____|_|_|___|_| |_| |___|___|___|___|___|  |___|___|  |_____|___|_  |___|");Sleep(tempo);
                    printf("                                                                  |___|    ");Sleep(tempo);*/


    setlocale(LC_ALL, "C");

    linhaCol(1,69);printf("%c", 194);
    linhaCol(2,69);printf("%c", 179);
    linhaCol(3,69);printf("%c", 179);
    linhaCol(4,69);printf("%c", 179);
    linhaCol(5,69);printf("%c", 179);
    linhaCol(6,69);printf("%c", 179);
    linhaCol(7,69);printf("%c", 193);

    int refer = 84;

    box(2, refer + 4, 4, refer + 8);
    box(4, refer + 4, 6, refer + 8);
    box(4, refer, 6, refer + 4); //Seta pra esquerda
    box(4, refer + 8, 6, refer + 12);
    linhaCol(4, refer + 4);printf("%c", 195);
    linhaCol(4, refer + 8);printf("%c", 180);
    linhaCol(3, refer + 6);printf("%c", 30);
    linhaCol(5, refer + 6);printf("%c", 31);

    /*linhaCol(4, refer + 5);printf(" ou ");

    box(2, refer + 9, 4, refer + 13);
    box(4, refer + 9, 6, refer + 13);
    linhaCol(4, refer + 9);printf("%c", 195);
    linhaCol(4, refer + 13);printf("%c", 180);
    linhaCol(3, refer + 11);printf("W");
    linhaCol(5, refer + 11);printf("S");*/

    box(2, refer + 20, 6, refer + 26);
    linhaCol(4, refer + 20); printf("%c", 180);

    setlocale(LC_ALL, "");

    addFade(3, 50, 1);

    //Calculando as coordenadas
    tamMaxItem = strlen(lista[0]);

    //Tamanho máximo dos itens
    for(i = 1; i < qtd; i ++) {
        tamMaxItem = (strlen(lista[i]) > tamMaxItem) ? strlen(lista[i]) : tamMaxItem;
    }

    lin2 = lin1 + (qtd * 2 + 2);
    col2 = col1 + tamMaxItem + 3;

    //Montando a tela do menu
    textColor(WHITE, _BLACK);

    setlocale(LC_ALL, "C");
    box(lin1, col1, lin2, col2);
    box(lin1, col2 + 5, lin2, col2 + 35);
    setlocale(LC_ALL, "Portuguese");

    //Laço das opções
    while(1){
        linhaSelecionada = lin1 + 2;
        for(i = 0; i < qtd; i ++) {
            if((i + 1) == opt) {
                textColor(BLACK, _WHITE);
                //PlaySound(TEXT("..\\sounds\\select.wav"), NULL, SND_ASYNC);
            } else {
                textColor(WHITE, _BLACK);
            }
            linhaCol(linhaSelecionada, col1 + 2);
            printf("%s", lista[i]);
            linhaSelecionada += 2;
        }

        //Aguarda teclas
        linhaCol(1,1);
        tecla = getch();
        if (tecla == 0 || tecla == 224) tecla = getch();
        /*if (GetAsyncKeyState(VK_UP)&1)
            printf("Seta pra cima pressionada!");
        else if (GetAsyncKeyState(VK_DOWN)&1)
            printf("Seta pra baixo pressionada!");
        else if (GetAsyncKeyState(VK_LEFT)&1)
            printf("Seta pra esquerda pressionada!");
        else if (GetAsyncKeyState(VK_RIGHT)&1)
            printf("Seta pra direita pressionada!");
        else if (GetAsyncKeyState(VK_RETURN)&1)
            printf("Tecla ENTER pressionada!");*/
        if (tecla == 72 || (tecla == 119) || (tecla == 87)) { //Seta pra cima
            if(opt == 1) opt = qtd;
            else if (opt > 1) opt --;
        } else if (tecla == 80 || (tecla == 115) || (tecla == 83)) { //Seta pra baixo
            if (opt == qtd) opt = 1;
            else if (opt < qtd) opt ++;
        } else if (tecla == 13) { //ENTER
            break;
        } else if (tecla == 27) { //ESC
            opt = 8;
            break;
        }
    }
    //PlaySound(TEXT("..\\sounds\\confirm.wav"), NULL, SND_ASYNC);
    textColor(WHITE, _BLACK);
    return opt;
}

/* 1) JOGAR - NÍVEL FÁCIL */
void opcao1(){
    int cont = 15;
    int conf = 0, pts = 0, acertos = 0;
    int ordem[5];
    size_t totPerguntas = sizeof(ordem)/sizeof(ordem[0]);
    char tituloPergunta[15];
    char numPerguntaChar[3];
    int perguntaEscolhida = 0;
    if(confirmarJogo("FÁCIL") == 0) return 0;
    titulo("FÁCIL", "O jogo começará em breve...");
    addFade(13, 50, 0);
    printf("\t\t\t\t      As letras em braile nesta dificuldade são:    \n");Sleep(tempo);
    printf("\n\t\t\t\t    A          E          I          O          U \n");Sleep(tempo);
    printf("\t\t\t\t  |o   |     |o   |     |   o|     |o   |     |o   |\n");Sleep(tempo);
    printf("\t\t\t\t  |    |     |   o|     |o   |     |   o|     |    |\n");Sleep(tempo);
    printf("\t\t\t\t  |    |     |    |     |    |     |o   |     |o  o|  ");addFade(3, 50, 1);
    printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *");addFade(2, 50, 1);
    printf("\t\t\t\t            Tempo restante: %d segundo(s)",cont);Sleep(tempo);
    Sleep(800);
    //system("cls");
    cont --;
    do{
        if (cont > 0 && cont <= 3) PlaySound(TEXT("..\\sounds\\countdown.wav"), NULL, SND_ASYNC);
        printf("Tempo restante: %d segundo(s) ",cont);
        Sleep(1000);
        cont --;
    }while(cont > 0);
    system("cls");
    PlaySound(TEXT("..\\sounds\\start.wav"), NULL, SND_ASYNC);
    gerarSeqPerguntas(ordem, totPerguntas);
    for (int numPergunta = 1; numPergunta <= 5; numPergunta ++) {
        strcpy(tituloPergunta, "Pergunta nº ");
        if (numPergunta < 10) strcat(tituloPergunta, "0");
        sprintf(numPerguntaChar, "%d", numPergunta);
        strcat(tituloPergunta, numPerguntaChar);
        titulo("FÁCIL", tituloPergunta);

        perguntaEscolhida = ordem[numPergunta - 1];
        switch(perguntaEscolhida){
            case 1:
                if(newPergunta(1, numPergunta, 'A', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 2:
                if(newPergunta(1, numPergunta, 'E', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 3:
                if(newPergunta(1, numPergunta, 'I', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 4:
                if(newPergunta(1, numPergunta, 'O', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 5:
                if(newPergunta(1, numPergunta, 'U', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
        }
    }
    fimJogo("FÁCIL", pts, acertos, totPerguntas);
    return;
}

/* 2) JOGAR - NÍVEL MÉDIO I */
void opcao2(){
    int cont = 20;
    int conf = 0, pts = 0, acertos = 0;
    int ordem[10];
    size_t totPerguntas = sizeof(ordem)/sizeof(ordem[0]);
    char tituloPergunta[15];
    char numPerguntaChar[3];
    int perguntaEscolhida = 0;
    if(confirmarJogo("MÉDIO I") == 0) return 0;
    addFade(11, 50, 0);
    printf("\t\t\t\t      As letras em braile nesta dificuldade são:      \n");Sleep(tempo);
    printf("\n\t\t\t\t    B          C          D          F          G   \n");Sleep(tempo);
    printf("\t\t\t\t  |o   |     |o  o|     |o  o|     |o  o|     |o  o|  \n");Sleep(tempo);
    printf("\t\t\t\t  |o   |     |    |     |   o|     |o   |     |o  o|  \n");Sleep(tempo);
    printf("\t\t\t\t  |    |     |    |     |    |     |    |     |    |  \n");Sleep(tempo);
    printf("\n\t\t\t\t    H          J          K          L          M   \n");Sleep(tempo);
    printf("\t\t\t\t  |o   |     |   o|     |o   |     |o   |     |o  o|  \n");Sleep(tempo);
    printf("\t\t\t\t  |o  o|     |o  o|     |    |     |o   |     |    |  \n");Sleep(tempo);
    printf("\t\t\t\t  |    |     |    |     |o   |     |o   |     |o   |    ");addFade(3, 50, 1);
    printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *");addFade(2, 50, 1);
    printf("\t\t\t\t              Tempo restante: %d segundos",cont);Sleep(tempo);
    Sleep(1000);
    system("cls");
    cont --;
    do{
        addFade(11, 50, 0);
        printf("\t\t\t\t      As letras em braile nesta dificuldade são:     \n");
        printf("\n\t\t\t\t    B          C          D          F          G  \n");
        printf("\t\t\t\t  |o   |     |o  o|     |o  o|     |o  o|     |o  o| \n");
        printf("\t\t\t\t  |o   |     |    |     |   o|     |o   |     |o  o| \n");
        printf("\t\t\t\t  |    |     |    |     |    |     |    |     |    | \n");
        printf("\n\t\t\t\t    H          J          K          L          M  \n");
        printf("\t\t\t\t  |o   |     |   o|     |o   |     |o   |     |o  o| \n");
        printf("\t\t\t\t  |o  o|     |o  o|     |    |     |o   |     |    | \n");
        printf("\t\t\t\t  |    |     |    |     |o   |     |o   |     |o   | \n\n\n");
        printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *  \n\n");
        if(cont == 1){
            printf("\t\t\t\t              Tempo restante: %d segundo",cont);
        }
        else{
            printf("\t\t\t\t              Tempo restante: %d segundos",cont);
        }
        Sleep(1000);
        system("cls");
        cont --;
    }while(cont > 0);
    gerarSeqPerguntas(ordem, totPerguntas);
    for (int numPergunta = 1; numPergunta <= 10; numPergunta ++) {
        strcpy(tituloPergunta, "Pergunta nº ");
        if (numPergunta < 10) strcat(tituloPergunta, "0");
        sprintf(numPerguntaChar, "%d", numPergunta);
        strcat(tituloPergunta, numPerguntaChar);
        titulo("MÉDIO I", tituloPergunta);

        perguntaEscolhida = ordem[numPergunta - 1];
        switch(perguntaEscolhida){
            case 1:
                if(newPergunta(2, numPergunta, 'B', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 2:
                if(newPergunta(2, numPergunta, 'C', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 3:
                if(newPergunta(2, numPergunta, 'D', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 4:
                if(newPergunta(2, numPergunta, 'F', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 5:
                if(newPergunta(2, numPergunta, 'G', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 6:
                if(newPergunta(2, numPergunta, 'H', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 7:
                if(newPergunta(2, numPergunta, 'J', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 8:
                if(newPergunta(2, numPergunta, 'K', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 9:
                if(newPergunta(2, numPergunta, 'L', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 10:
                if(newPergunta(2, numPergunta, 'M', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
        }
    }
    fimJogo("MÉDIO I", pts, acertos, totPerguntas);
    return;
}

/* 3) JOGAR - NÍVEL MÉDIO II */
void opcao3(){
    int cont = 25;
    int conf = 0, pts = 0, acertos = 0;
    int ordem[11];
    size_t totPerguntas = sizeof(ordem)/sizeof(ordem[0]);
    int perguntaEscolhida = 0;
    char tituloPergunta[15];
    char numPerguntaChar[3];
    if(confirmarJogo("MÉDIO II") == 0) return 0;
    addFade(8, 0, 0);
    printf("\t\t\t\t      As letras em braile nesta dificuldade são:       \n");Sleep(tempo);
    printf("\n\t\t\t\t    N          P          Q          R          S    \n");Sleep(tempo);
    printf("\t\t\t\t  |o  o|     |o  o|     |o  o|     |o   |     |   o|   \n");Sleep(tempo);
    printf("\t\t\t\t  |   o|     |o   |     |o  o|     |o  o|     |o   |   \n");Sleep(tempo);
    printf("\t\t\t\t  |o   |     |o   |     |o   |     |o   |     |o   |   \n");Sleep(tempo);
    printf("\n\t\t\t\t    T          V          W          X          Y    \n");Sleep(tempo);
    printf("\t\t\t\t  |   o|     |o   |     |   o|     |o  o|     |o  o|   \n");Sleep(tempo);
    printf("\t\t\t\t  |o  o|     |o   |     |o  o|     |    |     |   o|   \n");Sleep(tempo);
    printf("\t\t\t\t  |o   |     |o  o|     |   o|     |o  o|     |o  o|   \n");Sleep(tempo);
    printf("\n\t\t\t\t                          Z \n");Sleep(tempo);
    printf("\t\t\t\t                        |o   |\n");Sleep(tempo);
    printf("\t\t\t\t                        |   o|\n");Sleep(tempo);
    printf("\t\t\t\t                        |o  o|  ");addFade(3, 50, 1);
    printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *");addFade(2, 50, 1);
    printf("\t\t\t\t              Tempo restante: %d segundos",cont);
    Sleep(800);
    system("cls");
    cont --;
    do{
        addFade(8, 0, 0);
        printf("\t\t\t\t      As letras em braile nesta dificuldade são:       \n");
        printf("\n\t\t\t\t    N          P          Q          R          S    \n");
        printf("\t\t\t\t  |o  o|     |o  o|     |o  o|     |o   |     |   o|   \n");
        printf("\t\t\t\t  |   o|     |o   |     |o  o|     |o  o|     |o   |   \n");
        printf("\t\t\t\t  |o   |     |o   |     |o   |     |o   |     |o   |   \n");
        printf("\n\t\t\t\t    T          V          W          X          Y    \n");
        printf("\t\t\t\t  |   o|     |o   |     |   o|     |o  o|     |o  o|   \n");
        printf("\t\t\t\t  |o  o|     |o   |     |o  o|     |    |     |   o|   \n");
        printf("\t\t\t\t  |o   |     |o  o|     |   o|     |o  o|     |o  o|   \n");
        printf("\n\t\t\t\t                          Z     \n");
        printf("\t\t\t\t                        |o   |    \n");
        printf("\t\t\t\t                        |   o|    \n");
        printf("\t\t\t\t                        |o  o|\n\n\n");
        printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *\n\n");
        if(cont != 0){
            printf("\t\t\t\t              Tempo restante: %d segundos",cont);
        }else{
            printf("\t\t\t\t              Tempo restante: %d segundo",cont);
        }
        Sleep(1000);
        system("cls");
        cont --;
    }while(cont > 0);
    gerarSeqPerguntas(ordem, totPerguntas);

    for (int numPergunta = 1; numPergunta <= 11; numPergunta ++) {
        strcpy(tituloPergunta, "Pergunta nº ");
        if (numPergunta < 10) strcat(tituloPergunta, "0");
        sprintf(numPerguntaChar, "%d", numPergunta);
        strcat(tituloPergunta, numPerguntaChar);
        titulo("MÉDIO II", tituloPergunta);
        perguntaEscolhida = ordem[numPergunta - 1];
        switch(perguntaEscolhida){
            case 1:
                if(newPergunta(3, numPergunta, 'N', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 2:
                if(newPergunta(3, numPergunta, 'P', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 3:
                if(newPergunta(3, numPergunta, 'Q', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 4:
                if(newPergunta(3, numPergunta, 'R', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 5:
                if(newPergunta(3, numPergunta, 'S', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 6:
                if(newPergunta(3, numPergunta, 'T', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 7:
                if(newPergunta(3, numPergunta, 'V', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 8:
                if(newPergunta(3, numPergunta, 'W', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 9:
                if(newPergunta(3, numPergunta, 'X', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 10:
                if(newPergunta(3, numPergunta, 'Y', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 11:
                if(newPergunta(3, numPergunta, 'Z', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
        }
    }
    fimJogo("MÉDIO II", pts, acertos, totPerguntas);
    return;
}

/* 4) JOGAR - NÍVEL DIFÍCIL */
void opcao4(){
    int cont = 30;
    int conf = 0, pts = 0, acertos = 0;
    int ordem[26];
    size_t totPerguntas = sizeof(ordem)/sizeof(ordem[0]);
    int perguntaEscolhida = 0;
    char tituloPergunta[15];
    char numPerguntaChar[3];
    if(confirmarJogo("DIFÍCIL") == 0) return 0;
    addFade(8, 0, 0);
    printf("\t\t\t\t      As letras em braille nesta dificuldade são:\n");
    printf("\n\t      A          B          C          D          E          F          G          H          I     \n");Sleep(tempo);
    printf("\t    |o   |     |o   |     |o  o|     |o  o|     |o   |     |o  o|     |o  o|     |o   |     |   o|    \n");Sleep(tempo);
    printf("\t    |    |     |o   |     |    |     |   o|     |   o|     |o   |     |o  o|     |o  o|     |o   |    \n");Sleep(tempo);
    printf("\t    |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |    \n");Sleep(tempo);
    printf("\n\t      J          K          L          M          N          O          P          Q          R     \n");Sleep(tempo);
    printf("\t    |   o|     |o   |     |o   |     |o  o|     |o  o|     |o   |     |o  o|     |o  o|     |o   |    \n");Sleep(tempo);
    printf("\t    |o  o|     |    |     |o   |     |    |     |   o|     |   o|     |o   |     |o  o|     |o  o|    \n");Sleep(tempo);
    printf("\t    |    |     |o   |     |o   |     |o   |     |o   |     |o   |     |o   |     |o   |     |o   |    \n");Sleep(tempo);
    printf("\n\t\t    S          T          U          V          W          X          Y          Z                \n");Sleep(tempo);
    printf("\t\t  |   o|     |   o|     |o   |     |o   |     |   o|     |o  o|     |o  o|     |o   |               \n");Sleep(tempo);
    printf("\t\t  |o   |     |o  o|     |    |     |o   |     |o  o|     |    |     |   o|     |   o|               \n");Sleep(tempo);
    printf("\t\t  |o   |     |o   |     |o  o|     |o  o|     |   o|     |o  o|     |o  o|     |o  o|                 ");addFade(3, tempo, 1);
    printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *");addFade(2, tempo, 1);
    printf("\t\t\t\t            Tempo restante: %d segundos",cont);
    Sleep(800);
    system("cls");
    cont --;
    do{
        addFade(8, 0, 0);
        printf("\t\t\t\t      As letras em braille nesta dificuldade são:\n");
        printf("\n\t      A          B          C          D          E          F          G          H          I   \n");
        printf("\t    |o   |     |o   |     |o  o|     |o  o|     |o   |     |o  o|     |o  o|     |o   |     |   o|  \n");
        printf("\t    |    |     |o   |     |    |     |   o|     |   o|     |o   |     |o  o|     |o  o|     |o   |  \n");
        printf("\t    |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |  \n");
        printf("\n\t      J          K          L          M          N          O          P          Q          R   \n");
        printf("\t    |   o|     |o   |     |o   |     |o  o|     |o  o|     |o   |     |o  o|     |o  o|     |o   |  \n");
        printf("\t    |o  o|     |    |     |o   |     |    |     |   o|     |   o|     |o   |     |o  o|     |o  o|  \n");
        printf("\t    |    |     |o   |     |o   |     |o   |     |o   |     |o   |     |o   |     |o   |     |o   |  \n");
        printf("\n\t\t    S          T          U          V          W          X          Y          Z              \n");
        printf("\t\t  |   o|     |   o|     |o   |     |o   |     |   o|     |o  o|     |o  o|     |o   |             \n");
        printf("\t\t  |o   |     |o  o|     |    |     |o   |     |o  o|     |    |     |   o|     |   o|             \n");
        printf("\t\t  |o   |     |o   |     |o  o|     |o  o|     |   o|     |o  o|     |o  o|     |o  o|         \n\n\n");
        printf("\t\t\t\t   * Tente memorizar as letras acima e boa sorte! *\n\n");
        if(cont != 1){
            printf("\t\t\t\t            Tempo restante: %d segundos",cont);
        }else{
            printf("\t\t\t\t            Tempo restante: %d segundo",cont);
        }
        Sleep(950);
        system("cls");
        cont --;
    }while(cont > 0);
    gerarSeqPerguntas(ordem, totPerguntas);
    for (int numPergunta = 1; numPergunta <= 26; numPergunta ++) {
        strcpy(tituloPergunta, "Pergunta nº ");
        if (numPergunta < 10) strcat(tituloPergunta, "0");
        sprintf(numPerguntaChar, "%d", numPergunta);
        strcat(tituloPergunta, numPerguntaChar);
        titulo("DIFÍCIL", tituloPergunta);
        perguntaEscolhida = ordem[numPergunta - 1];
        switch(perguntaEscolhida){
            case 1:
                if(newPergunta(4, numPergunta, 'A', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 2:
                if(newPergunta(4, numPergunta, 'B', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 3:
                if(newPergunta(4, numPergunta, 'C', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 4:
                if(newPergunta(4, numPergunta, 'D', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 5:
                if(newPergunta(4, numPergunta, 'E', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 6:
                if(newPergunta(4, numPergunta, 'F', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 7:
                if(newPergunta(4, numPergunta, 'G', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 8:
                if(newPergunta(4, numPergunta, 'H', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 9:
                if(newPergunta(4, numPergunta, 'I', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 10:
                if(newPergunta(4, numPergunta, 'J', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 11:
                if(newPergunta(4, numPergunta, 'K', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 12:
                if(newPergunta(4, numPergunta, 'L', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 13:
                if(newPergunta(4, numPergunta, 'M', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 14:
                if(newPergunta(4, numPergunta, 'N', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 15:
                if(newPergunta(4, numPergunta, 'O', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 16:
                if(newPergunta(4, numPergunta, 'P', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 17:
                if(newPergunta(4, numPergunta, 'Q', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 18:
                if(newPergunta(4, numPergunta, 'R', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 19:
                if(newPergunta(4, numPergunta, 'S', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 20:
                if(newPergunta(4, numPergunta, 'T', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 21:
                if(newPergunta(4, numPergunta, 'U', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 22:
                if(newPergunta(4, numPergunta, 'V', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 23:
                if(newPergunta(4, numPergunta, 'W', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 24:
                if(newPergunta(4, numPergunta, 'X', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 25:
                if(newPergunta(4, numPergunta, 'Y', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
            case 26:
                if(newPergunta(4, numPergunta, 'Z', pts, acertos) == 1){
                    pts += 150; acertos ++;
                }else pts += 50;
            break;
        }
    }
    fimJogo("DIFÍCIL", pts, acertos, totPerguntas);
    return;
}

/* 5) Ranking dos Jogadores*/
void opcao5(){
    titulo("-", "Ranking dos Jogadores");
    system("cls");
    printf("Essa aqui é a tela do ranking de jogadores. Aperte qualquer coisa pra sair daqui.");
    getchar();
    system("cls");
}

/* 6) INSTRUÇÕES DO JOGO */
int opcao6(){
    titulo("-", "Tela de Instruções");
    int finalopt = 0, erro = 0;
    char opt[100];
    system("cls");
    do {
        if (erro == 0) {
            addFade(4, 50, 0);
        }
        printf("\t\t\t\t     _____                     __                 \n");Sleep(tempo);
        printf("\t\t\t\t    |     |___ _____ ___    __|  |___ ___ ___ ___ \n");Sleep(tempo);
        printf("\t\t\t\t    |   --| . |     | . |  |  |  | . | . | .'|  _|\n");Sleep(tempo);
        printf("\t\t\t\t    |_____|___|_|_|_|___|  |_____|___|_  |__,|_|  \n");Sleep(tempo);
        printf("\t\t\t\t                                     |___|        \n");Sleep(tempo);
        addFade(1, tempo, 1);
        printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
        printf("\t     |                               O QUE É O 'JOGO DO BRAILE'?                                |\n");Sleep(tempo);
        printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
        printf("\t     | O 'Jogo do Braile' é um simples jogo de memória sob a forma de quiz, cujo objetivo do(a) |\n");Sleep(tempo);
        printf("\t     | jogador(a) é acertar o máximo de perguntas possíveis. Ele tem o intuito de ensinar o     |\n");Sleep(tempo);
        printf("\t     | sistema de escrita tátil 'Braile', de forma simples e lúdica, para pessoas sem           |\n");Sleep(tempo);
        printf("\t     | deficiência visual.                                                                      |\n");Sleep(tempo);
        printf("\t     +------------------------------------------------------------------------------------------+\n\n");Sleep(tempo);
        printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
        printf("\t     |                                  COMO O JOGO FUNCIONA?                                   |\n");Sleep(tempo);
        printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
        printf("\t     | Neste jogo, cada pergunta é composta por:                                                |\n");Sleep(tempo);
        printf("\t     |                                                                                          |\n");Sleep(tempo);
        printf("\t     | * Uma letra exibida em destaque e de acordo com o sistema 'Braile' de escrita; e         |\n");Sleep(tempo);
        printf("\t     | * Quatro letras referentes às alternativas, exibidas de acordo com o alfabeto latino.    |\n");Sleep(tempo);
        printf("\t     |                                                                                          |\n");Sleep(tempo);
        printf("\t     | Para responder tais perguntas, é necessário memorizar as letras que aparecerão na tela   |\n");Sleep(tempo);
        printf("\t     | por alguns segundos.                                                                     |\n");Sleep(tempo);
        printf("\t     +------------------------------------------------------------------------------------------+");Sleep(tempo);
        addFade(3, tempo, 1);
        showCursor();
        printf("\t\t        DESEJA VER UM EXEMPLO DO JOGO? (Digite 'S' para Sim ou 'N' para Não): ");
        fgets(opt, 100, stdin);
        hideCursor();
        finalopt = verifyOpt(opt, 1);
        if (finalopt == 0) {
            system("cls");
            erro ++;
            printf("\n");
            telaErro();
            addFade(1, tempo, 1);
        } else if (finalopt == 2) {
            addFade(2, 0, 0);
            addFade(37, 25, 1);
            system("cls");
            return 0;
        }
    } while (finalopt != 1);
    system("cls");
    addFade(1, tempo, 1);
    exibirBannerDificuldade("EXEMPLO");
    addFade(2, tempo, 1);
    printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
    printf("\t     | Como dito anteriormente, neste jogo cada pergunta é composta por:                        |\n");Sleep(tempo);
    printf("\t     |                                                                                          |\n");Sleep(tempo);
    printf("\t     | * Uma letra exibida em destaque e de acordo com o sistema 'Braile' de escrita; e         |\n");Sleep(tempo);
    printf("\t     | * Quatro letras referentes às alternativas, exibidas de acordo com o alfabeto latino.    |\n");Sleep(tempo);
    printf("\t     +------------------------------------------------------------------------------------------+");Sleep(tempo);
    addFade(3, tempo, 1);
    printf("\t\t\t\t   +-----------------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t   |     Letra escrita em Braile (EM DESTAQUE)     |\n");Sleep(tempo);
    printf("\t\t\t\t   +-----------------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t   |                                               |");Sleep(tempo);
    printAlfabeto('E');
    printf("\n\t\t\t\t   |                                               |\n");Sleep(tempo);
    printf("\t\t\t\t   +-----------------------------------------------+");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\n\t\t\t\t\t     * Alternativas propostas *\n\n");Sleep(tempo);
    printf("\n\t\t\t\t\t      a) --> A        c) --> E");Sleep(tempo);
    addFade(1, tempo, 1);
    printf("\n\t\t\t\t\t      b) --> I        d) --> O");Sleep(tempo);
    addFade(4, tempo, 1);
    printf("\t\t\t\t   **** Pressione qualquer tecla para continuar ****");
    getche();
    system("cls");
    addFade(1, tempo, 1);
    exibirBannerDificuldade("EXEMPLO");
    addFade(2, tempo, 1);
    printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
    printf("\t     | Respondendo a questão corretamente, você ganhará 150 pontos! Veja o exemplo a seguir:    |\n");Sleep(tempo);
    printf("\t     +------------------------------------------------------------------------------------------+");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\t\t\t\t   +-----------------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t   |     Letra escrita em Braile (EM DESTAQUE)     |\n");Sleep(tempo);
    printf("\t\t\t\t   +-----------------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t   |                                               |");Sleep(tempo);
    printAlfabeto('E');
    printf("\n\t\t\t\t   |                                               |\n");Sleep(tempo);
    printf("\t\t\t\t   +-----------------------------------------------+");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\n\t\t\t\t\t      a) --> A        c) --> E");Sleep(tempo);
    addFade(1, tempo, 1);
    printf("\n\t\t\t\t\t      b) --> I        d) --> O");Sleep(tempo);
    printf("\n\n\t\t\t\t\t       +--------------------+\n");Sleep(tempo);
    printf("\n\t\t\t\t\t\tInsira sua opção : c");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\t\t\t\t   +-----------------------------------------------+");Sleep(tempo);
    printf("\n\t\t\t\t   |                CERTA RESPOSTA!                | ");Sleep(tempo);
    printf("\n\t\t\t\t   |           VOCÊ GANHOU: +150 PONTOS!           | ");Sleep(tempo);
    printf("\n\t\t\t\t   +----------------------------------------------+");Sleep(tempo);
    addFade(3, tempo, 1);
    printf("\t\t\t\t   **** Pressione qualquer tecla para continuar ****");
    getche();
    system("cls");
    addFade(1, tempo, 1);
    exibirBannerDificuldade("EXEMPLO");
    addFade(2, tempo, 1);
    printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
    printf("\t     | Caso erre a resposta, apenas 50 pontos serão somados à sua pontuação. Veja o exemplo:    |\n");Sleep(tempo);
    printf("\t     +------------------------------------------------------------------------------------------+");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\t\t\t\t   +-----------------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t   |     Letra escrita em Braile (EM DESTAQUE)     |\n");Sleep(tempo);
    printf("\t\t\t\t   +-----------------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t   |                                               |");Sleep(tempo);
    printAlfabeto('E');
    printf("\n\t\t\t\t   |                                               |\n");Sleep(tempo);
    printf("\t\t\t\t   +-----------------------------------------------+");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\n\t\t\t\t\t      a) --> A        c) --> E");Sleep(tempo);
    addFade(1, tempo, 1);
    printf("\n\t\t\t\t\t      b) --> I        d) --> O");Sleep(tempo);
    printf("\n\n\t\t\t\t\t       +--------------------+\n");Sleep(tempo);
    printf("\n\t\t\t\t\t\tInsira sua opção : a");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\t\t\t\t   +-----------------------------------------------+");Sleep(tempo);
    printf("\n\t\t\t\t   |     VOCÊ ERROU... RESPOSTA CORRETA: \"c)\"      | ");Sleep(tempo);
    printf("\n\t\t\t\t   |           VOCÊ GANHOU: +50 PONTOS!            | ");Sleep(tempo);
    printf("\n\t\t\t\t   +----------------------------------------------+");Sleep(tempo);
    addFade(3, tempo, 1);
    printf("\t\t\t\t   **** Pressione qualquer tecla para continuar ****");
    getche();
    system("cls");
    addFade(1, tempo, 1);
    exibirBannerDificuldade("EXEMPLO");
    addFade(2, tempo, 1);
    printf("\t     +------------------------------------------------------------------------------------------+\n");Sleep(tempo);
    printf("\t     | Ao encerrar o quiz, será possível analisar o seu desempenho final. Nele você poderá ver: |\n");Sleep(tempo);
    printf("\t     |                                                                                          |\n");Sleep(tempo);
    printf("\t     | * O \"Número de perguntas respondidas corretamente\" / \"Número total de perguntas\"; e      |\n");Sleep(tempo);
    printf("\t     | * A pontuação total com base nos acertos e erros cometidos durante o quiz.               |\n");Sleep(tempo);
    printf("\t     |                                                                                          |\n");Sleep(tempo);
    printf("\t     | Divirta-se com o \"Jogo do Braile\"!                                                       |\n");Sleep(tempo);
    printf("\t     +------------------------------------------------------------------------------------------+");Sleep(tempo);
    addFade(3, tempo, 1);
    printf("\t\t\t\t       +---------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t       |       EXEMPLO DAS ESTATÍSTICAS        |\n");Sleep(tempo);
    printf("\t\t\t\t       +---------------------------------------+\n");Sleep(tempo);
    printf("\t\t\t\t       |                                       |\n");Sleep(tempo);
    printf("\t\t\t\t       |        Total de ACERTOS: 5 / 5        |\n");
    printf("\t\t\t\t       |                                       |\n");Sleep(tempo);
    printf("\t\t\t\t       |         Total de PONTOS: 750          |\n");
    printf("\t\t\t\t       |                                       |\n");Sleep(tempo);
    printf("\t\t\t\t       +---------------------------------------+");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\t\t\t\t\t\t\t *****");Sleep(tempo);
    addFade(1, tempo, 1);
    banner();
    addFade(2, 50, 1);
    printf("\t\t\t       **** Pressione qualquer tecla para retornar ao menu ****");
    getche();
    addFade(39, 25, 1);
    system("cls");
    return 0;
}

/* 7) CRÉDITOS DO JOGO */
void opcao7(){
    system("cls");
    titulo("-", "Créditos do Jogo");
    printf("\t\t\t\t\t               ___                  \n");Sleep(tempo);
    printf("\t\t\t\t\t    _____     /__/  _ _ _           \n");Sleep(tempo);
    printf("\t\t\t\t\t   |     |___ ___ _| |_| |_ ___ ___ \n");Sleep(tempo);
    printf("\t\t\t\t\t   |   --|  _| -_| . | |  _| . |_ -|\n");Sleep(tempo);
    printf("\t\t\t\t\t   |_____|_| |___|___|_|_| |___|___|");Sleep(tempo);
    addFade(2, tempo, 1);
    printf("\t\t +-----------------------------------------------------------------------------------+ ");Sleep(tempo);
    printf("\n\t\t | Este jogo foi originalmente desenvolvido como forma de uma avaliação parcial do   | ");Sleep(tempo);
    printf("\n\t\t | trabalho final do 1º ano do Curso Técnico em Informática, ofertado pelo Instituto | ");Sleep(tempo);
    printf("\n\t\t | Federal do Paraná - Campus Colombo. Tal trabalho foi apresentado no ano de 2017   | ");Sleep(tempo);
    printf("\n\t\t | sob o nome 'Acessibilidade das pessoas com deficiência visual na atualidade'.     | ");Sleep(tempo);
    printf("\n\t\t +-----------------------------------------------------------------------------------+ \n");Sleep(tempo);


    printf("\t\t\t      _____               _         _               _           \n");Sleep(tempo);
    printf("\t\t\t     |  _  |___ ___ ___ _| |___ ___|_|_____ ___ ___| |_ ___ ___ \n");Sleep(tempo);
    printf("\t\t\t     |     | . |  _| .'| . | -_|  _| |     | -_|   |  _| . |_ -|\n");Sleep(tempo);
    printf("\t\t\t     |__|__|_  |_| |__,|___|___|___|_|_|_|_|___|_|_|_| |___|___|\n");Sleep(tempo);
    printf("\t\t\t           |___|                                                \n");Sleep(tempo);
    printf("\t\t\t(Membros da equipe do trabalho original - Obrigado por todo o apoio!) \n");Sleep(tempo);
    addFade(1, tempo, 1);
    printf("\n     -> Arthur Ogg - 'https://github.com/Arthur-Diesel'\n");Sleep(tempo);
    printf("\n     -> Guilherme Cordeiro - 'https://github.com/gui-cordeiro'\n");Sleep(tempo);
    printf("\n     -> João Lucas - Nenhum contato dele foi encontrado, mas fica aqui registrado o agradecimento a ele!\n");Sleep(tempo);
    printf("\n     -> Lucas Pereira - 'https://github.com/Luc45-Pereira'\n");Sleep(tempo);
    printf("\n     -> Matheus Delay - 'https://twitter.com/DelayMath'\n");Sleep(tempo);
    banner();
    printf("\n\t\t\t\t   **** Pressione qualquer tecla para continuar ****");
    getch();
    system("cls");
    addFade(4, 50, 0);
    exibirTelaGitHub();
    printf("\n\t\t\t       **** Pressione qualquer tecla para retornar ao menu ****");
    getch();
    addFade(39, 25, 1);
    system("cls");
}

/* 8) SAIR DO JOGO */
void opcao8(){
    system("cls");
    PlaySound(TEXT("..\\sounds\\ending.wav"), NULL, SND_ASYNC);
    titulo("-", "Obrigado por Jogar!");
    exibirBannerDificuldade("AGRADECIMENTO");
    Sleep(1500);
    addFade(2, 50, 1);
    exibirTelaGitHub();
    Sleep(1100);
    printf("\n\t\t\t\t  **** Pressione qualquer tecla para sair do jogo ****");
    getchar();
    PlaySound(TEXT("..\\sounds\\intro.wav"), NULL, SND_ASYNC);
    titulo("-", "Saindo do Jogo...");
    addFade(2, 0, 0);
    addFade(37, 175, 1);
    system("cls");
}
